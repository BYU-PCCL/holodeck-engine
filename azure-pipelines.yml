# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
    - repository: holodeck-worlds
      type: github
      endpoint: BYU-PCCL
      name: BYU-PCCL/holodeck-worlds
    - repository: holodeck-configs
      type: github
      endpoint: BYU-PCCL
      name: BYU-PCCL/holodeck-configs

trigger:
- develop

pool: default

steps:
- checkout: self
  lfs: true
- script: |
    chmod 777 -R .
    bash -c '/bin/su ue4 Build/ContinuousIntegration/build_project.sh'
  workingDirectory: $(Build.SourcesDirectory)/holodeck-engine
  displayName: Build editor
- checkout: holodeck-worlds
  lfs: true
- checkout: holodeck-configs
- script: |
    chmod 777 -R .
  displayName: Update permissions for worlds, configs
- script: |
    bash -c '/bin/su ue4 Build/ContinuousIntegration/package_ue4_project.sh $(Build.BuildId)'
  workingDirectory: $(Build.SourcesDirectory)/holodeck-engine
  displayName: Package
# TODO: Update package_ue4_project.sh to dump artifact to /mnt/artifacts within the Docker image
# TODO: We need an easy way to cull artifacts in whatever directory /mnt/artifacts maps to on the host.
#  Just deleting the oldest artifact until the directory size is under 10GB might work